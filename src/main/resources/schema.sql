DROP TABLE IF EXISTS "film_genre";
DROP TABLE IF EXISTS "likes";
DROP TABLE IF EXISTS "friendship";
DROP TABLE IF EXISTS films_directors;
DROP TABLE IF EXISTS "films_directors";
DROP TABLE IF EXISTS directors;
DROP TABLE IF EXISTS "directors";
DROP TABLE IF EXISTS "reviews_likes";
DROP TABLE IF EXISTS "reviews";
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS "films";
DROP TABLE IF EXISTS "events";
DROP TABLE IF EXISTS "users";
DROP TABLE IF EXISTS "genres";
DROP TABLE IF EXISTS "MPA_ratings";

-- Если нужно, чтобы данные сохранялись, то необходимо закомментировать секцию с DROP TABLE.

CREATE TABLE IF NOT EXISTS "genres" (
  "id" INTEGER PRIMARY KEY,
  "name" varchar
);

CREATE TABLE IF NOT EXISTS "MPA_ratings" (
  "id" INTEGER PRIMARY KEY,
  "name" varchar
);

CREATE TABLE IF NOT EXISTS "films" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "description" varchar(200),
  "release_date" timestamp,
  "duration" integer,
  "mpa_rating_id" integer
);

CREATE TABLE IF NOT EXISTS "film_genre" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "film_id" integer,
  "genre_id" integer
);

create TABLE IF NOT EXISTS directors
(
    director_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL
);

create TABLE IF NOT EXISTS films_directors
(
    film_id bigint NOT NULL,
    director_id integer NOT NULL,
    CONSTRAINT films_directors_pk PRIMARY KEY (film_id, director_id),
    CONSTRAINT films_directors_fk1 FOREIGN KEY (film_id) REFERENCES "films" ("id") ON delete CASCADE,
    CONSTRAINT films_directors_fk2 FOREIGN KEY (director_id) REFERENCES directors (director_id) ON delete CASCADE
);

CREATE TABLE IF NOT EXISTS "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" varchar,
  "login" varchar NOT NULL,
  "name" varchar,
  "birthday" timestamp
);

CREATE TABLE IF NOT EXISTS "likes" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "id_user" integer,
  "id_film" integer
);

CREATE TABLE IF NOT EXISTS "friendship" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "id_user" integer,
  "id_friend" integer,
  "is_accepted" boolean DEFAULT false
);

CREATE TABLE IF NOT EXISTS "reviews" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "id_user" integer,
  "id_film" integer,
  "content" varchar,
  "isPositive" boolean
);

CREATE TABLE IF NOT EXISTS "reviews_likes" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "id_review" integer,
  "id_user" integer,
  "isUseful" boolean
);

CREATE TABLE IF NOT EXISTS "events"
(
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "last_update" timestamp,
    "id_user" integer,
    "event_type" varchar,
    "operation" varchar,
    "entity_id" integer
    );

ALTER TABLE "film_genre" ADD FOREIGN KEY ("film_id") REFERENCES "films" ("id") on delete cascade;
ALTER TABLE "film_genre" ADD FOREIGN KEY ("genre_id") REFERENCES "genres" ("id");
ALTER TABLE "film_genre" ADD UNIQUE ("film_id", "genre_id");

ALTER TABLE "films" ADD FOREIGN KEY ("mpa_rating_id") REFERENCES "MPA_ratings" ("id");

ALTER TABLE "likes" ADD FOREIGN KEY ("id_user") REFERENCES "users" ("id") on delete cascade;
ALTER TABLE "likes" ADD FOREIGN KEY ("id_film") REFERENCES "films" ("id") on delete cascade;
ALTER TABLE "likes" ADD UNIQUE ("id_user", "id_film");

ALTER TABLE "friendship" ADD FOREIGN KEY ("id_user") REFERENCES "users" ("id") on delete cascade;

ALTER TABLE "friendship" ADD FOREIGN KEY ("id_friend") REFERENCES "users" ("id") on delete cascade;

ALTER TABLE "friendship" ADD UNIQUE ("id_user", "id_friend");

ALTER TABLE "reviews" ADD FOREIGN KEY ("id_film") REFERENCES "films" ("id");
ALTER TABLE "reviews" ADD FOREIGN KEY ("id_user") REFERENCES "users" ("id");
ALTER TABLE "reviews" ADD UNIQUE ("id_user", "id_film");

ALTER TABLE "reviews_likes" ADD FOREIGN KEY ("id_review") REFERENCES "reviews" ("id") ON DELETE CASCADE;
ALTER TABLE "reviews_likes" ADD FOREIGN KEY ("id_user") REFERENCES "users" ("id");
ALTER TABLE "reviews_likes" ADD UNIQUE ("id_user", "id_review");

ALTER TABLE "events" ADD FOREIGN KEY ("id_user") REFERENCES "users" ("id") ON DELETE CASCADE;